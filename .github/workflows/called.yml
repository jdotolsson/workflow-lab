on:
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to publish the module"
        required: true
        type: string
    secrets:
      MY_SECRET:
        required: true
      BYPASS_PAT:
        required: true

  workflow_call:
    inputs:
      environment:
        description: "The environment to publish the module"
        required: true
        type: string
    secrets:
      MY_SECRET:
        required: true
      BYPASS_PAT:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BYPASS_PAT }}

      - name: Get Version
        id: version
        run: |
          echo ${{ inputs.environment }}
          echo ${{ secrets.MY_SECRET }}
          echo ${{secrets.MY_SECRET }} | sed 's/./& /g'

      # - name: Gather module versions
      #   id: gather-versions
      #   shell: pwsh
      #   run: |
      #     $versionPattern = "v[0-9]{4}-[0-9]{2}-[0-9]{2}"
      #     $files = @("C:/hej/v2022-04-21/main.bicep")
      #     [array]$bicepModules = $files `
      #       | ForEach-Object -Process {
      #         @{
      #           file = $_
      #           version = ($_ | Select-String -Pattern $versionPattern).Matches.Value}
      #         }
      #     Write-Host "Found '$($bicepModules.length)' modules"

      #     $compressedJson = ConvertTo-Json -InputObject $bicepModules -Compress
      #     $json = ${{ toJSON($bicepModules) }}
      #     Write-Host "::set-output name=modules::$json"
      #     Write-Host $json

      # - name: gd
      #   shell: pwsh
      #   run: |
      #     $json = '${{ steps.gather-versions.outputs.modules }}'
      #     [array]$modules = ConvertFrom-Json -InputObject $json

      #     Write-Host $json
      #     Write-Host $modules[0].file

      - name: Create report file
        shell: pwsh
        run: |
          $path = "test"
          if(-not (test-path $path)){
            New-Item -Path $path -ItemType Directory
          }
          Get-Date | Out-File -FilePath "$path/workflow.trigger"

      - uses: EndBug/add-and-commit@v9
        with:
          add: "*workflow.trigger"
          default_author: github_actions
          pull: "--rebase --autostash"
